Transfer learning (2016)
======================
Python and Matlab implementation of transfer learning algorithms for domain adaptation.
This code has been tested on Matlab R2015b and Anacoda python on a windows system.
========================================================================================
Overview
The folder "data" contains the original NSL_KDD and some split data for transfer learning.

1.Transfer learning algorithms "HeTL" is implemented in Matlab, which is in "Matlab"  folder.
================
Data Description
================

(1)In "matlab/data" folder, there are 3 transfer learning tasks, they're:
  "dos_vs_probe"
  "dos_vs_r2l"
  "probe_vs_r2l"
(2)For each task, the input data is under each folder.
  "source.x.dat" is the features of instances in the source domain. 
  "source.y.dat" is the labels of the corresponding instances in "source.x.dat"
  "target.x.dat" is the features of instances in the target domain. 
  "target.y.dat" is the labels of the corresponding instances in "target.x.dat"
  #The HeTL needs the source and target should be the same size of the instances. The feature dimensions can be different.
(3)Within each task folder, there is a "result" folder, which is for the output results for the transfer learning codes. 
   The "result" folder will contain several folders with the names of the combinations of the parameters.
   The codes will produce the new projected data named "transformed_source.csv" and "transformed_target.csv" in each subfolder.

================
Code Description
================
(1) The core algorithm of transfer learning was Matlab/HeTL.m and Matlab/HeTL_v2.m. 
To run the algorithm, please type in "run_HeTL" in Matlab command line; The output results will be written to the folder "matlab/data/[domain_name]/result_hetl"
  
Please specify your file_path to the transfer learning task.
================================================================================================================================================
  
2.Classification on new transformed data by HeTL, which is implemented in python, in "python" folder.
================
Code Description
================
(1)"Classification_domain_adaption.py"  is to produce the classification results for the transformed data by "HeTL".  
It will read all the "transformed_source.csv" and "transformed_target.csv" generated by "run_HeTL.m", located in matlab/{transfer learning task}/result.
The output result will be either printed on the screen and directly written to a csv file containing all the metrics result under the subfolder 'result'
Please specify "domain" to your transfer learning task.

Summary.ipynb
 -Viewã€€feature distribution of NSL_KDD data.
Classification-baseline.ipynb
 -run the classfication before transfer learning as baselines

=================
Result Description
=================
The generated classfication results contains k,b,isnormlized and several metrics for each classfier. The metrics is "accuracy" (ac),"precision"(p),"recall","f1","auc". Each row is results for the combinations for parameters k,b and is isnormlized.
The last two rows are the best values for the current metric of current classifier and the corresponding best parameters.
================================================================================================================================================

3. View the data and the baseline for NSL_KDD
The viewing, and baseline approaches are implemented in ipython notebook.

 
====================================================================================================================================
4.Other utility codes
python/SelecteSamples.py
 -Generating samples from large NSL_KDD dataset.

============
Note
============
* Please note, if you need to use the code for any kind of academy use or commecial use, please cite paper:
J. Zhao, S. Shetty and J. W. Pan, "Feature-based transfer learning for network security," MILCOM 2017 - 2017 IEEE Military Communications Conference (MILCOM), Baltimore, MD, 2017, pp. 17-22.
doi: 10.1109/MILCOM.2017.8170749

https://ieeexplore.ieee.org/document/8170749/

* Please feel free to contact juan.zhao@vanderbilt.edu if come up with any problem.

==========
Reference
==========

The code also includes baseline approach called HeMap.m. To run the algorithm is to run_HeMap.m The reference paper is: X. Shi Q. Liu W. Fan et al. "Transfer learning on heterogeneous feature spaces via spectral transformation" 2010 IEEE International Conference on Data Mining pp. 1049-1054 Dec 2010.


